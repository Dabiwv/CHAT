import telebot
from telebot import types
import random

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '6732720595:AAFePTUr9fb4678Avx4Y74ViuSBJQQ8mACM'
bot = telebot.TeleBot(TOKEN)

# –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
INITIAL_BALANCE = 2500

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_balances = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–∏–≥—Ä—ã—à–∞
def generate_win(amount):
    win_chance = random.uniform(0.1, 1)  # –®–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞ –æ—Ç 10% –¥–æ 100%
    win_amount = amount * win_chance
    return win_amount, win_chance * 100

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_command(message):
    user_id = message.from_user.id
    if user_id not in user_balances:
        user_balances[user_id] = INITIAL_BALANCE
    bot.send_message(user_id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ! –í–∞—à –±–∞–ª–∞–Ω—Å: 2500 üí∞")
    show_commands(message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
def show_commands(message):
    markup = types.InlineKeyboardMarkup()
    btn_commands = types.InlineKeyboardButton("–ö–æ–º–∞–Ω–¥—ã", callback_data="show_commands")
    markup.add(btn_commands)
    bot.send_message(message.from_user.id, "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ö–æ–º–∞–Ω–¥—ã"
@bot.callback_query_handler(func=lambda call: call.data == "show_commands")
def handle_commands(call):
    commands = (
        "/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
        "/spin <—Å—É–º–º–∞> - –ò–≥—Ä–∞—Ç—å –≤ —Å–ª–æ—Ç\n"
        "/balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å\n"
        "/chance <—Å—É–º–º–∞> - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —à–∞–Ω—Å –Ω–∞ –≤—ã–∏–≥—Ä—ã—à\n"
        "/casino <—Å—É–º–º–∞> - –ö–∞–∑–∏–Ω–æ\n"
        "/lottery <—Å—É–º–º–∞> - –õ–æ—Ç–µ—Ä–µ—è"
    )
    bot.send_message(call.message.chat.id, f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n{commands}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /spin
@bot.message_handler(commands=['spin'])
def spin_command(message):
    user_id = message.from_user.id
    if user_id not in user_balances:
        bot.send_message(user_id, "–î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
        return
    
    try:
        amount = int(message.text.split()[1])
        if amount < 25:
            bot.send_message(user_id, "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 25 üí∞")
            return
        
        if amount > user_balances[user_id]:
            bot.send_message(user_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            return
        
        win_amount, win_chance = generate_win(amount)
        user_balances[user_id] -= amount
        if win_amount > 0:
            user_balances[user_id] += win_amount
            result_message = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win_amount:.2f} üí∞ (–®–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞: {win_chance:.2f}%)"
        else:
            result_message = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!"
        
        bot.send_message(user_id, result_message)
        bot.send_message(user_id, f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user_balances[user_id]:.2f} üí∞")
        
    except IndexError:
        bot.send_message(user_id, "–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏: /spin <—Å—É–º–º–∞>")
    except ValueError:
        bot.send_message(user_id, "–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
    except telebot.apihelper.ApiTelegramException as e:
        print(f"–û—à–∏–±–∫–∞ Telegram API: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /balance
@bot.message_handler(commands=['balance'])
def balance_command(message):
    user_id = message.from_user.id
    if user_id not in user_balances:
        bot.send_message(user_id, "–î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
        return
    
    bot.send_message(user_id, f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user_balances[user_id]:.2f} üí∞")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /chance
@bot.message_handler(commands=['chance'])
def chance_command(message):
    try:
        amount = int(message.text.split()[1])
        if amount < 25:
            bot.send_message(message.chat.id, "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 25 üí∞")
            return
        
        chance = random.uniform(10, 100)  # –®–∞–Ω—Å –æ—Ç 10% –¥–æ 100%
        bot.send_message(message.chat.id, f"–í–∞—à —à–∞–Ω—Å –Ω–∞ –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {chance:.2f}%")
    
    except IndexError:
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏: /chance <—Å—É–º–º–∞>")
    except ValueError:
        bot.send_message(message.chat.id, "–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
    except telebot.apihelper.ApiTelegramException as e:
        print(f"–û—à–∏–±–∫–∞ Telegram API: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /casino
@bot.message_handler(commands=['casino'])
def casino_command(message):
    user_id = message.from_user.id
    if user_id not in user_balances:
        bot.send_message(user_id, "–î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
        return
    
    try:
        amount = int(message.text.split()[1])
        if amount < 25:
            bot.send_message(user_id, "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 25 üí∞")
            return
        
        if amount > user_balances[user_id]:
            bot.send_message(user_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            return
        
        win_amount, win_chance = generate_win(amount)
        user_balances[user_id] -= amount
        if win_amount > 0:
            user_balances[user_id] += win_amount
            result_message = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win_amount:.2f} üí∞ (–®–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞: {win_chance:.2f}%)"
        else:
            result_message = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!"
        
        bot.send_message(user_id, result_message)
        bot.send_message(user_id, f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user_balances[user_id]:.2f} üí∞")
        
    except IndexError:
        bot.send_message(user_id, "–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏: /casino <—Å—É–º–º–∞>")
    except ValueError:
        bot.send_message(user_id, "–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
    except telebot.apihelper.ApiTelegramException as e:
        print(f"–û—à–∏–±–∫–∞ Telegram API: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /lottery
@bot.message_handler(commands=['lottery'])
def lottery_command(message):
    user_id = message.from_user.id
    if user_id not in user_balances:
        bot.send_message(user_id, "–î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
        return
    
    try:
        amount = int(message.text.split()[1])
        if amount < 25:
            bot.send_message(user_id, "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 25 üí∞")
            return
        
        if amount > user_balances[user_id]:
            bot.send_message(user_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            return
        
        win_amount, win_chance = generate_win(amount)
        user_balances[user_id] -= amount
        if win_amount > 0:
            user_balances[user_id] += win_amount
            result_message = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win_amount:.2f} üí∞ (–®–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞: {win_chance:.2f}%)"
        else:
            result_message = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!"
        
        bot.send_message(user_id, result_message)
        bot.send_message(user_id, f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user_balances[user_id]:.2f} üí∞")
        
    except IndexError:
        bot.send_message(user_id, "–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏: /lottery <—Å—É–º–º–∞>")
    except ValueError:
        bot.send_message(user_id, "–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
    except telebot.apihelper.ApiTelegramException as e:
        print(f"–û—à–∏–±–∫–∞ Telegram API: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
