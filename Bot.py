import telebot
from telebot import types

# –í—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
API_TOKEN = '6692785864:AAEqASjDj-9JcmIZKGOjCSgvXWXDv7E7KaY'
bot = telebot.TeleBot(API_TOKEN)

# –î–∞–Ω–Ω—ã–µ –æ–± –∞–∫–∫–∞—É–Ω—Ç–∞—Ö, –≤–∏—Ä—Ç–∞—Ö –∏ –∫–µ–π—Å–∞—Ö
accounts = {
    '–ù—É–± 6 –ª–≤–ª': {'price': 500, 'description': '–ù–µ—Ç –¥–æ–º–∞, –Ω–∞—á–∞–ª—å–Ω–æ–µ –∞–≤—Ç–æ'},
    '–°—Ä–µ–¥–Ω–∏–π 10 –ª–≤–ª': {'price': 1500, 'description': '–ï—Å—Ç—å –¥–æ–º, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∞–≤—Ç–æ'},
    '–ü—Ä–æ 15 –ª–≤–ª': {'price': 3500, 'description': '–î–æ–º –≤ —Ü–µ–Ω—Ç—Ä–µ, —Ö–æ—Ä–æ—à–µ–µ –∞–≤—Ç–æ'},
    '–ú–∏–ª–ª–∏–∞—Ä–¥–µ—Ä 23 –ª–≤–ª': {'price': 10000, 'description': '–í–∏–ª–ª–∞, –∫—Ä—É—Ç–∞—è –º–∞—à–∏–Ω–∞, –±–∏–∑–Ω–µ—Å'},
}

cases = {
    '–ö–µ–π—Å –ë–æ–º–∂–∞': 140,
    '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–µ–π—Å': 200,
    '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–µ–π—Å': 350,
    '–û—Å–æ–±—ã–π –∫–µ–π—Å': 500,
    '–ö–µ–π—Å –∑–∞ –ë–ª–µ–∫ –ö–æ–∏–Ω—ã': 700,
}

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ê–∫–∫–∞—É–Ω—Ç—ã')
    btn2 = types.KeyboardButton('–í–∏—Ä—Ç—ã')
    btn3 = types.KeyboardButton('–ö–µ–π—Å—ã')
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω! –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ê–∫–∫–∞—É–Ω—Ç—ã
@bot.message_handler(lambda message: message.text == '–ê–∫–∫–∞—É–Ω—Ç—ã')
def send_accounts(message):
    markup = types.InlineKeyboardMarkup()
    for account_name in accounts:
        markup.add(types.InlineKeyboardButton(text=account_name, callback_data=f"account_{account_name}"))
    bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith('account_'))
def account_details(call):
    account_name = call.data.split('account_')[1]
    account_info = accounts[account_name]
    text = f"–ê–∫–∫–∞—É–Ω—Ç: {account_name}\n–¶–µ–Ω–∞: {account_info['price']} —Ä—É–±.\n–û–ø–∏—Å–∞–Ω–∏–µ: {account_info['description']}"
    payment_methods = types.InlineKeyboardMarkup()
    payment_methods.add(types.InlineKeyboardButton(text="–¢–µ–ª–µ–≥—Ä–∞–º –∫–æ—à–µ–ª–µ–∫", url="https://t.me/wallet/"))
    payment_methods.add(types.InlineKeyboardButton(text="Kaspi –±–∞–Ω–∫", callback_data="kaspi_payment"))
    payment_methods.add(types.InlineKeyboardButton(text="–°–ë–ü", callback_data="sbp_payment"))
    bot.send_message(call.message.chat.id, text)
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:", reply_markup=payment_methods)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –í–∏—Ä—Ç—ã
@bot.message_handler(lambda message: message.text == '–í–∏—Ä—Ç—ã')
def send_virts_prompt(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏—Ä—Ç–æ–≤ (–æ—Ç 50 —Ç—ã—Å –¥–æ 45 –º–ª–Ω):")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≤–∏—Ä—Ç–æ–≤
@bot.message_handler(func=lambda message: message.text.isdigit())
def handle_virts(message):
    virts_amount = int(message.text)
    if 50000 <= virts_amount <= 45000000:
        price = virts_amount * 0.001  # –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞ –≤–∏—Ä—Ç—ã
        text = f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {virts_amount} –≤–∏—Ä—Ç–æ–≤ –∑–∞ {price} —Ä—É–±."
        payment_methods = types.InlineKeyboardMarkup()
        payment_methods.add(types.InlineKeyboardButton(text="–¢–µ–ª–µ–≥—Ä–∞–º –∫–æ—à–µ–ª–µ–∫", url="https://t.me/wallet/"))
        payment_methods.add(types.InlineKeyboardButton(text="Kaspi –±–∞–Ω–∫", callback_data="kaspi_payment"))
        payment_methods.add(types.InlineKeyboardButton(text="–°–ë–ü", callback_data="sbp_payment"))
        bot.send_message(message.chat.id, text)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:", reply_markup=payment_methods)
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏—Ä—Ç–æ–≤ (–æ—Ç 50 —Ç—ã—Å –¥–æ 45 –º–ª–Ω).")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ö–µ–π—Å—ã
@bot.message_handler(lambda message: message.text == '–ö–µ–π—Å—ã')
def send_cases(message):
    markup = types.InlineKeyboardMarkup()
    for case_name, case_price in cases.items():
        markup.add(types.InlineKeyboardButton(text=f"{case_name} - {case_price} —Ä—É–±.", callback_data=f"case_{case_name}"))
    bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–µ–π—Å—ã:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–µ–π—Å–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith('case_'))
def case_details(call):
    case_name = call.data.split('case_')[1]
    case_price = cases[case_name]
    text = f"–ö–µ–π—Å: {case_name}\n–¶–µ–Ω–∞: {case_price} —Ä—É–±."
    payment_methods = types.InlineKeyboardMarkup()
    payment_methods.add(types.InlineKeyboardButton(text="–¢–µ–ª–µ–≥—Ä–∞–º –∫–æ—à–µ–ª–µ–∫", url="https://t.me/wallet/"))
    payment_methods.add(types.InlineKeyboardButton(text="Kaspi –±–∞–Ω–∫", callback_data="kaspi_payment"))
    payment_methods.add(types.InlineKeyboardButton(text="–°–ë–ü", callback_data="sbp_payment"))
    bot.send_message(call.message.chat.id, text)
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:", reply_markup=payment_methods)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã Kaspi
@bot.callback_query_handler(func=lambda call: call.data == 'kaspi_payment')
def kaspi_payment(call):
    bot.send_message(call.message.chat.id, "üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–µ–Ω—å–≥–∏ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º –Ω–∞ Kaspi Gold:\n‚òéÔ∏è –ù–æ–º–µ—Ä: 4400 4302 6934 6638\nüë®‚Äçüíª –ò–º—è - –î–∞–Ω–∏–ª –ì.\nüí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ù–ï –ü–ò–°–ê–¢–¨!!!")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã –°–ë–ü
@bot.callback_query_handler(func=lambda call: call.data == 'sbp_payment')
def sbp_payment(call):
    bot.send_message(call.message.chat.id, "–û–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ –Ω–∞ –∫–∞—Ä—Ç—É –†–û–°–°–ò–ò: 2200701089399395 –ê–∫–∏–º.\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–≤—Ç–æ—Ä–æ–º –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ @doksformoney –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤.")

bot.polling()
